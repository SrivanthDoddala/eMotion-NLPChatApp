[{"/Users/srivanthdoddala/Desktop/NLPChatApp/public/src/index.js":"1","/Users/srivanthdoddala/Desktop/NLPChatApp/public/src/App.js":"2","/Users/srivanthdoddala/Desktop/NLPChatApp/public/src/pages/Register.jsx":"3","/Users/srivanthdoddala/Desktop/NLPChatApp/public/src/pages/Chat.jsx":"4","/Users/srivanthdoddala/Desktop/NLPChatApp/public/src/pages/Login.jsx":"5","/Users/srivanthdoddala/Desktop/NLPChatApp/public/src/utils/APIRoutes.js":"6","/Users/srivanthdoddala/Desktop/NLPChatApp/public/src/pages/SetAvatar.jsx":"7","/Users/srivanthdoddala/Desktop/NLPChatApp/public/src/components/Contacts.jsx":"8","/Users/srivanthdoddala/Desktop/NLPChatApp/public/src/components/Welcome.jsx":"9","/Users/srivanthdoddala/Desktop/NLPChatApp/public/src/components/ChatContainer.jsx":"10","/Users/srivanthdoddala/Desktop/NLPChatApp/public/src/components/Logout.jsx":"11","/Users/srivanthdoddala/Desktop/NLPChatApp/public/src/components/ChatInput.jsx":"12","/Users/srivanthdoddala/Desktop/NLPChatApp/public/src/components/Messages.jsx":"13"},{"size":254,"mtime":1696644302030,"results":"14","hashOfConfig":"15"},{"size":579,"mtime":1696664440594,"results":"16","hashOfConfig":"15"},{"size":5284,"mtime":1696663866212,"results":"17","hashOfConfig":"15"},{"size":2753,"mtime":1697057479079,"results":"18","hashOfConfig":"15"},{"size":4448,"mtime":1696663800219,"results":"19","hashOfConfig":"15"},{"size":401,"mtime":1697050737706,"results":"20","hashOfConfig":"15"},{"size":4889,"mtime":1696708541955,"results":"21","hashOfConfig":"15"},{"size":4699,"mtime":1696721432076,"results":"22","hashOfConfig":"15"},{"size":654,"mtime":1696725243860,"results":"23","hashOfConfig":"15"},{"size":5856,"mtime":1697223448645,"results":"24","hashOfConfig":"15"},{"size":755,"mtime":1696752713086,"results":"25","hashOfConfig":"15"},{"size":3800,"mtime":1697018964306,"results":"26","hashOfConfig":"15"},{"size":219,"mtime":1696751386329,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"27pbu1",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"31"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"31"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"31"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"31"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"/Users/srivanthdoddala/Desktop/NLPChatApp/public/src/index.js",[],[],["74"],"/Users/srivanthdoddala/Desktop/NLPChatApp/public/src/App.js",[],[],"/Users/srivanthdoddala/Desktop/NLPChatApp/public/src/pages/Register.jsx",["75"],[],"import React, { useState, useEffect } from 'react';\nimport styled from \"styled-components\";\nimport { Link, useNavigate } from 'react-router-dom';\nimport Logo from \"../assets/logo.png\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport axios from \"axios\";\nimport { registerRoute } from \"../utils/APIRoutes\";\n\nfunction Register() {\n    const navigate = useNavigate();\n    const [values, setValues] = useState({\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n    });\n    const toastOptions =  {\n        position: \"bottom-right\",\n        autoClose: 8000,\n        pauseOnHover: true,\n        draggable: true,\n        theme: \"dark\",\n    };\n\n    useEffect(()=> {\n        if(localStorage.getItem(\"chat-app-user\")) {\n            navigate(\"/\")\n        }\n    },[])\n  const handleSubmit = async(event)=> {\n    event.preventDefault();\n    if(handleValidation()) {\n        const {password, username, email} = values;\n        const {data} = await axios.post(registerRoute, {\n            username,\n            email,\n            password,\n        });\n        if(data.status === false) {\n            toast.error(data.msg, toastOptions);\n        }\n        if(data.status === true) {\n            localStorage.setItem('chat-app-user',JSON.stringify(data.user));\n            navigate(\"/\");\n        }\n    }\n  };\n  \n  const handleValidation =() => {\n    const {password, confirmPassword, username, email} = values;\n    if(password !== confirmPassword) {\n        toast.error(\n            \"Your passwords should be matching\", \n            toastOptions\n        );\n        return false;\n    } else if (username.length < 3) {\n        toast.error(\"Your username is too short\", toastOptions);\n        return false;\n    } else if (password.length < 8) {\n        toast.error(\n            \"Your password should be at least eight characters\", \n            toastOptions\n        );\n        return false;\n    } else if(email === \"\") {\n        toast.error(\"An email is required\", toastOptions);\n        return false;\n    }\n    return true;\n  };\n\n  const handleChange = (event) => {\n    setValues({ ...values, [event.target.name]: event.target.value });\n  };\n\n  return (\n    <>\n        <FormContainer>\n            <form onSubmit={(event)=>handleSubmit(event)}>\n                <div className='brand'>\n                    <img src={Logo} alt=\"Logo\" />\n                    <h1>eMotion</h1>\n                </div>\n                <input \n                    type='text' \n                    placeholder=\"Username\" \n                    name=\"username\" \n                    onChange={(e) =>handleChange(e)}\n                />\n                <input \n                    type='email' \n                    placeholder=\"Email\" \n                    name=\"email\" \n                    onChange={(e) =>handleChange(e)}\n                />\n                <input \n                    type='password' \n                    placeholder=\"Password\" \n                    name=\"password\" \n                    onChange={(e) =>handleChange(e)}\n                />\n                <input \n                    type='password' \n                    placeholder=\"Confirm Password\" \n                    name=\"confirmPassword\" \n                    onChange={(e) =>handleChange(e)}\n                />\n                <button type=\"submit\">Create User</button>\n                <span>\n                    Already have an account? <Link to=\"/login\">Login</Link>\n                </span>\n            </form>\n        </FormContainer>\n        <ToastContainer/>\n    </>\n  );\n\n}\n\nconst FormContainer = styled.div`\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    gap: 1rem;\n    align-items: center;\n    background-color: #4b77bd;\n    .brand {\n        display: flex;\n        align-items: center;\n        gap: 1rem;\n        justify-content: center;\n        img {\n            height: 5rem;\n        }\n        h1 {\n            color: white;\n        }\n    }\n    form {\n        display: flex;\n        flex-direction: column;\n        gap: 2rem;\n        background-color: #395a8f;\n        border-radius: 2rem;\n        padding: 3rem 5rem;\n        input {\n            background-color: transparent;\n            padding: 1rem;\n            border: 0.1rem solid #4b77bd;\n            border-radius: 0.4rem;\n            color: white;\n            width: 100%;\n            font-size: 1rem;\n            &:focus {\n                border: 0.1rem solid #768294;\n                outline: none;\n            }\n        }\n        button {\n            background-color: #4b77bd;\n            color: white;\n            padding: 1rem 2rem;\n            border: none;\n            font-weight: bold;\n            cursor: pointer;\n            border-radius: 0.4rem;\n            font-size: 1rem;\n            text-transform: uppercase;\n            transition: 0.4s ease-in-out;\n            &:hover {\n                background-color: #768294;\n            }\n        }\n        span {\n            color: white;\n            //text-transform: uppercase;\n            a {\n                color: #768294;\n                text-decoration: none;\n                font-weight: bold\n            }\n        }\n    }\n`;\n\nexport default Register;","/Users/srivanthdoddala/Desktop/NLPChatApp/public/src/pages/Chat.jsx",["76","77"],[],"import React,{useState, useEffect, useRef} from 'react'\nimport styled from 'styled-components';\nimport axios from \"axios\";\nimport { useNavigate } from 'react-router-dom';\nimport { allUsersRoute, host } from '../utils/APIRoutes';\nimport Contacts from '../components/Contacts';\nimport Welcome from '../components/Welcome';\nimport ChatContainer from '../components/ChatContainer';\nimport { io } from \"socket.io-client\";\nfunction Chat() {\n    const navigate = useNavigate();\n    const [contacts, setContacts] = useState([]);\n    const [currentUser, setCurrentUser]= useState(undefined);\n    const [currentChat, setCurrentChat] = useState(undefined);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const socket = useRef();\n    useEffect(() => {\n        const fetchData = async () => {\n            if (!localStorage.getItem(\"chat-app-user\")) {\n                navigate(\"/login\");\n            } else {\n                setCurrentUser(await JSON.parse(localStorage.getItem(\"chat-app-user\")));\n                setIsLoaded(true);\n            }\n        };\n        fetchData();\n    }, []);\n    useEffect(()=> {\n        if (currentUser) {\n            socket.current = io(host);\n            socket.current.emit(\"add-user\",currentUser._id);\n        }\n    },[currentUser]);\n    useEffect(() => {\n        const fetchData = async () => {\n            if (currentUser) {\n                if (currentUser.isAvatarImageSet) {\n                    const data = await axios.get(`${allUsersRoute}/${currentUser._id}`);\n                    setContacts(data.data);\n                } else {\n                    navigate(\"/setAvatar\");\n                }\n            }\n        };\n        fetchData();\n    }, [currentUser]);  \n    const handleChatChange = (chat) => {\n        setCurrentChat(chat);\n    }\n  return (\n    <Container>\n        <div className=\"container\">\n            <Contacts contacts ={contacts} currentUser={currentUser} changeChat={handleChatChange}/>\n            {isLoaded && currentChat === undefined ? (\n                <Welcome currentUser={currentUser}/>\n            ) : (\n                <ChatContainer currentChat={currentChat} currentUser={currentUser} socket={socket}/>\n            )}\n        </div>\n    </Container>\n  ); \n}\n\nconst Container = styled.div`\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    gap: 1rem;\n    align-items: center;\n    background-color: #4b77bd;\n    .container {\n        height: 85vh;\n        width: 85vw;\n        background-color: #00000076;\n        display: grid;\n        grid-template-columns: 25% 75%;\n        @media screen and (min-width:720px) and (max-width:1080px) {\n            grid-template-columns: 35% 65%;\n        }\n    }\n`;\nexport default Chat;","/Users/srivanthdoddala/Desktop/NLPChatApp/public/src/pages/Login.jsx",["78"],[],"import React, { useState, useEffect } from 'react';\nimport styled from \"styled-components\";\nimport { Link, useNavigate } from 'react-router-dom';\nimport Logo from \"../assets/logo.png\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport axios from \"axios\";\nimport { loginRoute } from \"../utils/APIRoutes\";\n\nfunction Login() {\n    const navigate = useNavigate();\n    const [values, setValues] = useState({\n        username: \"\",\n        password: \"\",\n    });\n    const toastOptions =  {\n        position: \"bottom-right\",\n        autoClose: 8000,\n        pauseOnHover: true,\n        draggable: true,\n        theme: \"dark\",\n    };\n\n    useEffect(()=> {\n        if(localStorage.getItem(\"chat-app-user\")) {\n            navigate(\"/\")\n        }\n    },[])\n  const handleSubmit = async(event)=> {\n    event.preventDefault();\n    if(handleValidation()) {\n        const {password, username,} = values;\n        const {data} = await axios.post(loginRoute, {\n            username,\n            password,\n        });\n        if(data.status === false) {\n            toast.error(data.msg, toastOptions);\n        }\n        if(data.status === true) {\n            localStorage.setItem('chat-app-user',JSON.stringify(data.user));\n            navigate(\"/\");\n        }\n    }\n  };\n  \n  const handleValidation =() => {\n    const {password, username} = values;\n    if(password === \"\") {\n        toast.error(\"Your username and password are required\", toastOptions);\n        return false;\n    } else if (username.length === \"\") {\n        toast.error(\"Your username and password are required\", toastOptions);\n        return false;\n    } \n    return true;\n  };\n\n  const handleChange = (event) => {\n    setValues({ ...values, [event.target.name]: event.target.value });\n  };\n\n  return (\n    <>\n        <FormContainer>\n            <form onSubmit={(event)=>handleSubmit(event)}>\n                <div className='brand'>\n                    <img src={Logo} alt=\"Logo\" />\n                    <h1>eMotion</h1>\n                </div>\n                <input \n                    type='text' \n                    placeholder=\"Username\" \n                    name=\"username\" \n                    onChange={(e) =>handleChange(e)}\n                    min=\"3\"\n                />\n                <input \n                    type='password' \n                    placeholder=\"Password\" \n                    name=\"password\" \n                    onChange={(e) =>handleChange(e)}\n                />\n                <button type=\"submit\">Login</button>\n                <span>\n                    Don't have an account? <Link to=\"/register\">Register</Link>\n                </span>\n            </form>\n        </FormContainer>\n        <ToastContainer/>\n    </>\n  );\n\n}\n\nconst FormContainer = styled.div`\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    gap: 1rem;\n    align-items: center;\n    background-color: #4b77bd;\n    .brand {\n        display: flex;\n        align-items: center;\n        gap: 1rem;\n        justify-content: center;\n        img {\n            height: 5rem;\n        }\n        h1 {\n            color: white;\n        }\n    }\n    form {\n        display: flex;\n        flex-direction: column;\n        gap: 2rem;\n        background-color: #395a8f;\n        border-radius: 2rem;\n        padding: 3rem 5rem;\n        input {\n            background-color: transparent;\n            padding: 1rem;\n            border: 0.1rem solid #4b77bd;\n            border-radius: 0.4rem;\n            color: white;\n            width: 100%;\n            font-size: 1rem;\n            &:focus {\n                border: 0.1rem solid #768294;\n                outline: none;\n            }\n        }\n        button {\n            background-color: #4b77bd;\n            color: white;\n            padding: 1rem 2rem;\n            border: none;\n            font-weight: bold;\n            cursor: pointer;\n            border-radius: 0.4rem;\n            font-size: 1rem;\n            text-transform: uppercase;\n            transition: 0.4s ease-in-out;\n            &:hover {\n                background-color: #768294;\n            }\n        }\n        span {\n            color: white;\n            //text-transform: uppercase;\n            a {\n                color: #768294;\n                text-decoration: none;\n                font-weight: bold\n            }\n        }\n    }\n`;\n\nexport default Login;","/Users/srivanthdoddala/Desktop/NLPChatApp/public/src/utils/APIRoutes.js",[],[],"/Users/srivanthdoddala/Desktop/NLPChatApp/public/src/pages/SetAvatar.jsx",["79","80"],[],"import React, { useState, useEffect } from 'react';\nimport styled from \"styled-components\";\nimport { useNavigate } from 'react-router-dom';\nimport loader from \"../assets/loader.gif\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport axios from \"axios\";\nimport { setAvatarRoute } from \"../utils/APIRoutes\";\nimport {Buffer} from \"buffer\";\n\nexport default function SetAvatar() {\n\n    const api = `https://api.multiavatar.com/4645646`;\n    const navigate = useNavigate();\n    const [avatars, setAvatars] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [selectedAvatar, setSelectedAvatar] = useState(undefined);\n    const toastOptions =  {\n        position: \"bottom-right\",\n        autoClose: 8000,\n        pauseOnHover: true,\n        draggable: true,\n        theme: \"dark\",\n    };\n\n    useEffect(()=> {\n        if(!localStorage.getItem(\"chat-app-user\")) {\n            navigate(\"/login\")\n        }\n    },[])\n    const setProfilePicture = async () => {\n        if(selectedAvatar === undefined) {\n            toast.error(\"Please select an avatar or refresh the page for new options\", toastOptions);\n        } else {\n            const user = await JSON.parse(localStorage.getItem(\"chat-app-user\"));\n            const { data } = await axios.post(`${setAvatarRoute}/${user._id}`, {\n                image: avatars[selectedAvatar],\n            });\n            console.log(data);\n            if(data.isSet) {\n                user.isAvatarImageSet = true;\n                user.avatarImage = data.image;\n                localStorage.setItem(\"chat-app-user\",JSON.stringify(user));\n                navigate('/')\n            } else {\n                toast.error(\"Error setting avatar. Please try again\", toastOptions);\n            }\n        }\n    };\n    useEffect(() => {\n        const fetchData = async () => {\n            const data = [];\n            for(let i = 0; i < 4; i++) {\n                const image = await axios.get(\n                    `${api}/${Math.round(Math.random() * 1000)}`\n                );\n                const buffer = Buffer.from(image.data);\n                data.push(buffer.toString(\"base64\"));\n            }\n            setAvatars(data);\n            setIsLoading(false);\n        };\n\n        fetchData(); // Call the async function here\n    }, []);\n\n    return (\n        <>\n        {\n                isLoading? <Container>\n                    <img src={loader} alt =\"loader\" className='loader' />\n                </Container> : (\n                    <Container>\n                <div className=\"title-container\">\n                    <h1>Pick an avatar as your profile picture!</h1>\n                </div>\n                <div className='avatars'> {\n                    avatars.map((avatar,index)=> {\n                        return (\n                            <div \n                                key={index}\n                                className={`avatar ${\n                                    selectedAvatar === index ? \"selected\" : \"\"\n                                }`}\n                            >\n                                <img \n                                    src={`data:image/svg+xml;base64,${avatar}`}\n                                    alt=\"avatar\"\n                                    onClick={() => setSelectedAvatar(index)}\n                                />\n                            </div>\n                        );\n                    })\n                } </div>\n                <button className=\"submit-btn\" onClick={setProfilePicture}>Set as Avatar</button>\n            </Container>\n            )}\n            <ToastContainer />\n        </>\n    );\n}\n\nconst Container = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    gap: 3rem;\n    background-color: #4b77bd;\n    height: 100vh;\n    width: 100vw;\n    .loader {\n        max-inline-size: 100%;\n    }\n    .title-container {\n        h1 {\n            color: white;\n        }\n    }\n    .avatars {\n        display: flex;\n        gap: 2rem;\n        .avatar {\n            border: 0.4rem solid transparent;\n            padding: 0.4rem;\n            border-radius: 5rem;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            transition: 0.5s ease-in-out;\n            img {\n                height: 6rem;\n            }\n        }\n        .selected {\n            border: 0.4rem solid #cc123e;\n\n        }\n    }\n    .submit-btn {\n        background-color: #395a8f;\n        color: white;\n        padding: 1rem 2rem;\n        border: none;\n        font-weight: bold;\n        cursor: pointer;\n        border-radius: 0.4rem;\n        font-size: 1rem;\n        text-transform: uppercase;\n        transition: 0.4s ease-in-out;\n        &:hover {\n            background-color: #768294;\n        }\n    }\n`;","/Users/srivanthdoddala/Desktop/NLPChatApp/public/src/components/Contacts.jsx",[],[],"/Users/srivanthdoddala/Desktop/NLPChatApp/public/src/components/Welcome.jsx",[],[],"/Users/srivanthdoddala/Desktop/NLPChatApp/public/src/components/ChatContainer.jsx",["81","82"],[],"/Users/srivanthdoddala/Desktop/NLPChatApp/public/src/components/Logout.jsx",["83"],[],"import React from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport {BiPowerOff} from \"react-icons/bi\"\nexport default function Logout() {\n    const navigate = useNavigate();\n    const handleClick = async () => {\n        localStorage.clear();\n        navigate(\"/login\");\n    }\n    return (\n        <Button onClick={handleClick}>\n            <BiPowerOff />\n        </Button>\n    );\n}\n\nconst Button = styled.button\n`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 0.5rem;\n    border-radius: 0.5rem;\n    background-color: #9a86f3;\n    border: none;\n    cursor: pointer;\n    svg {\n        font-size: 1.3rem;\n        color: #ebe7ff;\n    }\n\n`;","/Users/srivanthdoddala/Desktop/NLPChatApp/public/src/components/ChatInput.jsx",[],[],"/Users/srivanthdoddala/Desktop/NLPChatApp/public/src/components/Messages.jsx",[],[],["84"],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":30,"column":7,"nodeType":"89","endLine":30,"endColumn":9,"suggestions":"90"},{"ruleId":"87","severity":1,"message":"88","line":27,"column":8,"nodeType":"89","endLine":27,"endColumn":10,"suggestions":"91"},{"ruleId":"87","severity":1,"message":"88","line":46,"column":8,"nodeType":"89","endLine":46,"endColumn":21,"suggestions":"92"},{"ruleId":"87","severity":1,"message":"88","line":28,"column":7,"nodeType":"89","endLine":28,"endColumn":9,"suggestions":"93"},{"ruleId":"87","severity":1,"message":"88","line":30,"column":7,"nodeType":"89","endLine":30,"endColumn":9,"suggestions":"94"},{"ruleId":"87","severity":1,"message":"95","line":65,"column":8,"nodeType":"89","endLine":65,"endColumn":10,"suggestions":"96"},{"ruleId":"87","severity":1,"message":"97","line":28,"column":8,"nodeType":"89","endLine":28,"endColumn":21,"suggestions":"98"},{"ruleId":"87","severity":1,"message":"99","line":51,"column":8,"nodeType":"89","endLine":51,"endColumn":10,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":4,"column":8,"nodeType":"103","messageId":"104","endLine":4,"endColumn":13},{"ruleId":"85","replacedBy":"105"},"no-new-object",["106"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["107"],["108"],["109"],["110"],["111"],"React Hook useEffect has a missing dependency: 'api'. Either include it or remove the dependency array.",["112"],"React Hook useEffect has a missing dependency: 'currentUser._id'. Either include it or remove the dependency array.",["113"],"React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["114"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar",["106"],"no-object-constructor",{"desc":"115","fix":"116"},{"desc":"115","fix":"117"},{"desc":"118","fix":"119"},{"desc":"115","fix":"120"},{"desc":"115","fix":"121"},{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},"Update the dependencies array to be: [navigate]",{"range":"128","text":"129"},{"range":"130","text":"129"},"Update the dependencies array to be: [currentUser, navigate]",{"range":"131","text":"132"},{"range":"133","text":"129"},{"range":"134","text":"129"},"Update the dependencies array to be: [api]",{"range":"135","text":"136"},"Update the dependencies array to be: [currentChat, currentUser._id]",{"range":"137","text":"138"},"Update the dependencies array to be: [socket]",{"range":"139","text":"140"},[856,858],"[navigate]",[1082,1084],[1685,1698],"[currentUser, navigate]",[802,804],[992,994],[2347,2349],"[api]",[1010,1023],"[currentChat, currentUser._id]",[1696,1698],"[socket]"]