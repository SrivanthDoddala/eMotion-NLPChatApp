{"ast":null,"code":"var _jsxFileName = \"/Users/srivanthdoddala/Desktop/NLPChatApp/public/src/components/ChatInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Picker from \"emoji-picker-react\";\nimport { IoMdSend } from 'react-icons/io';\nimport { BsEmojiSmileFill } from 'react-icons/bs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatInput({\n  handleSendMsg\n}) {\n  _s();\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [msg, setMsg] = useState(\"\");\n  const handleEmojiPickerHideShow = () => {\n    setShowEmojiPicker(!showEmojiPicker);\n  };\n  const handleEmojiClick = (event, emoji) => {\n    let message = msg;\n    message += emoji.emoji;\n    setMsg(message);\n  };\n  const sendChat = event => {\n    event.preventDefault();\n    if (msg.length > 0) {\n      handleSendMsg(msg);\n      setMsg('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emoji\",\n        children: [/*#__PURE__*/_jsxDEV(BsEmojiSmileFill, {\n          onClick: handleEmojiPickerHideShow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(Picker, {\n          onEmojiClick: handleEmojiClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"input-container\",\n      onSubmit: e => sendChat(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"type your message here\",\n        value: msg,\n        onChange: e => setMsg(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(IoMdSend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatInput, \"1jJ6EMfxImHEpDh8z2egAQFPv4U=\");\n_c = ChatInput;\nconst Container = styled.div`\n    display: grid;\n    grid-template-columns: 5% 95%;\n    align-items: center;\n    \n    padding: 0 2rem;\n    padding-bottom: 0.3rem;\n    \n    .button-container {\n        display: flex;\n        align-items: center;\n        color: white;\n        gap: 1rem;\n        \n        .emoji {\n            position: relative;\n            svg {\n                font-size: 1.5rem;\n                color: #ffff00c8;\n                cursor: pointer;\n            }\n            .emoji-picker-react {\n                position: absolute;\n                top: -350px;\n                background-color: #080420;\n                box-shadow: 0 5px 10px #9a86f3;\n                border-color: #9186f3;\n                .emoji-scroll-wrapper::-webkit-scrollbar {\n                    background-color: #080420;\n                    width: 5px;\n                    &-thumb {\n                        background-color: #9186f3;\n                    }\n                }\n                .emoji-categories {\n                    button {\n                        filter: contrast(0);\n                    }\n                }\n                .emoji-search {\n                    background-color: transparent;\n                    border-color: #9186f3;\n                }\n                .emoji-group:before {\n                    background-color: #080420;\n                }\n            }\n        }\n    }\n    \n    .input-container {\n        width: 100%;\n        border-radius: 2rem;\n        display: flex;\n        align-items: center;\n        gap: 2rem;\n        background-color: #ffffff34; \n        input {\n            width: 90%;\n            \n            background-color: transparent; \n            color: white;\n            border: none;\n            padding-left: 1rem;\n            font-size: 1.2rem;\n            \n            &::selection {\n                background-color: #9a86f3;\n            }\n            \n            &:focus {\n                outline: none;\n            }\n        }\n        \n        button {\n            padding: 0.3rem 2rem;\n            border-radius: 2rem;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            background-color: #9a86f3;\n            border: none;\n            svg {\n                font-size: 2rem;\n                color: white;\n            }\n        }\n    }\n`;\n_c2 = Container;\nvar _c, _c2;\n$RefreshReg$(_c, \"ChatInput\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"names":["React","useState","styled","Picker","IoMdSend","BsEmojiSmileFill","jsxDEV","_jsxDEV","ChatInput","handleSendMsg","_s","showEmojiPicker","setShowEmojiPicker","msg","setMsg","handleEmojiPickerHideShow","handleEmojiClick","event","emoji","message","sendChat","preventDefault","length","Container","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onEmojiClick","onSubmit","e","type","placeholder","value","onChange","target","_c","div","_c2","$RefreshReg$"],"sources":["/Users/srivanthdoddala/Desktop/NLPChatApp/public/src/components/ChatInput.jsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport styled from \"styled-components\";\nimport Picker from \"emoji-picker-react\";\nimport{IoMdSend} from 'react-icons/io';\nimport{ BsEmojiSmileFill } from 'react-icons/bs';\n\nexport default function ChatInput({handleSendMsg}) {\n    const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n    const [msg, setMsg] = useState(\"\");\n\n    const handleEmojiPickerHideShow = () => {\n        setShowEmojiPicker(!showEmojiPicker);\n    }\n    const handleEmojiClick = (event, emoji) => {\n        let message = msg;\n        message += emoji.emoji;\n        setMsg(message);\n    }\n    const sendChat = (event) => {\n        event.preventDefault();\n        if(msg.length > 0) {\n            handleSendMsg(msg);\n            setMsg('');\n        }\n    }\n    return (\n        <Container>\n            <div className=\"button-container\">\n                <div className=\"emoji\">\n                    <BsEmojiSmileFill onClick={handleEmojiPickerHideShow}/>\n                    {showEmojiPicker && <Picker onEmojiClick={handleEmojiClick} />}\n                </div>\n            </div>\n            <form className=\"input-container\" onSubmit={(e)=>sendChat(e)}>\n                <input type=\"text\" placeholder=\"type your message here\" value={msg} onChange={(e)=>setMsg(e.target.value)} />\n                <button className=\"submit\">\n                    <IoMdSend />\n                </button>\n            </form>\n        </Container>\n    );\n}\n\nconst Container = styled.div`\n    display: grid;\n    grid-template-columns: 5% 95%;\n    align-items: center;\n    \n    padding: 0 2rem;\n    padding-bottom: 0.3rem;\n    \n    .button-container {\n        display: flex;\n        align-items: center;\n        color: white;\n        gap: 1rem;\n        \n        .emoji {\n            position: relative;\n            svg {\n                font-size: 1.5rem;\n                color: #ffff00c8;\n                cursor: pointer;\n            }\n            .emoji-picker-react {\n                position: absolute;\n                top: -350px;\n                background-color: #080420;\n                box-shadow: 0 5px 10px #9a86f3;\n                border-color: #9186f3;\n                .emoji-scroll-wrapper::-webkit-scrollbar {\n                    background-color: #080420;\n                    width: 5px;\n                    &-thumb {\n                        background-color: #9186f3;\n                    }\n                }\n                .emoji-categories {\n                    button {\n                        filter: contrast(0);\n                    }\n                }\n                .emoji-search {\n                    background-color: transparent;\n                    border-color: #9186f3;\n                }\n                .emoji-group:before {\n                    background-color: #080420;\n                }\n            }\n        }\n    }\n    \n    .input-container {\n        width: 100%;\n        border-radius: 2rem;\n        display: flex;\n        align-items: center;\n        gap: 2rem;\n        background-color: #ffffff34; \n        input {\n            width: 90%;\n            \n            background-color: transparent; \n            color: white;\n            border: none;\n            padding-left: 1rem;\n            font-size: 1.2rem;\n            \n            &::selection {\n                background-color: #9a86f3;\n            }\n            \n            &:focus {\n                outline: none;\n            }\n        }\n        \n        button {\n            padding: 0.3rem 2rem;\n            border-radius: 2rem;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            background-color: #9a86f3;\n            border: none;\n            svg {\n                font-size: 2rem;\n                color: white;\n            }\n        }\n    }\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}