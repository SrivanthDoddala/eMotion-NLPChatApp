{"ast":null,"code":"var _jsxFileName = \"/Users/srivanthdoddala/Desktop/NLPChatApp/public/src/pages/SetAvatar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from \"styled-components\";\nimport { useNavigate } from 'react-router-dom';\nimport loader from \"../assets/loader.gif\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport axios from \"axios\";\nimport { setAvatarRoute } from \"../utils/APIRoutes\";\nimport { Buffer } from \"buffer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SetAvatar() {\n  _s();\n  const api = `https://api.multiavatar.com/4645646`;\n  const navigate = useNavigate();\n  const [avatars, setAvatars] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedAvatar, setSelectedAvatar] = useState(undefined);\n  const toastOptions = {\n    position: \"bottom-right\",\n    autoClose: 8000,\n    pauseOnHover: true,\n    draggable: true,\n    theme: \"dark\"\n  };\n  useEffect(() => {\n    if (!localStorage.getItem(\"chat-app-user\")) {\n      navigate(\"/login\");\n    }\n  }, []);\n  const setProfilePicture = async () => {\n    if (selectedAvatar === undefined) {\n      toast.error(\"Please select an avatar or refresh the page for new options\", toastOptions);\n    } else {\n      const user = await JSON.parse(localStorage.getItem(\"chat-app-user\"));\n      const {\n        data\n      } = await axios.post(`${setAvatarRoute}/${user._id}`, {\n        image: avatars[selectedAvatar]\n      });\n      console.log(data);\n      if (data.isSet) {\n        user.isAvatarImageSet = true;\n        user.avatarImage = data.image;\n        localStorage.setItem(\"chat-app-user\", JSON.stringify(user));\n        navigate('/');\n      } else {\n        toast.error(\"Error setting avatar. Please try again\", toastOptions);\n      }\n    }\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = [];\n      for (let i = 0; i < 4; i++) {\n        const image = await axios.get(`${api}/${Math.round(Math.random() * 1000)}`);\n        const buffer = Buffer.from(image.data);\n        data.push(buffer.toString(\"base64\"));\n      }\n      setAvatars(data);\n      setIsLoading(false);\n    };\n    fetchData(); // Call the async function here\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isLoading ? /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: loader,\n        alt: \"loader\",\n        className: \"loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 28\n    }, this) : /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-container\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Pick an avatar as your profile picture!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatars\",\n        children: [\" \", avatars.map((avatar, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `avatar ${selectedAvatar === index ? \"selected\" : \"\"}`,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/svg+xml;base64,${avatar}`,\n              alt: \"avatar\",\n              onClick: () => setSelectedAvatar(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this);\n        }), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-btn\",\n        onClick: setProfilePicture,\n        children: \"Set as Avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(SetAvatar, \"BeAPsJ8wCQQyE5ntbVx5JvwfYEY=\", false, function () {\n  return [useNavigate];\n});\n_c = SetAvatar;\nconst Container = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    gap: 3rem;\n    background-color: #4b77bd;\n    height: 100vh;\n    width: 100vw;\n    .loader {\n        max-inline-size: 100%;\n    }\n    .title-container {\n        h1 {\n            color: white;\n        }\n    }\n    .avatars {\n        display: flex;\n        gap: 2rem;\n        .avatar {\n            border: 0.4rem solid transparent;\n            padding: 0.4rem;\n            border-radius: 5rem;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            transition: 0.5s ease-in-out;\n            img {\n                height: 6rem;\n            }\n        }\n        .selected {\n            border: 0.4rem solid #cc123e;\n\n        }\n    }\n    .submit-btn {\n        background-color: #395a8f;\n        color: white;\n        padding: 1rem 2rem;\n        border: none;\n        font-weight: bold;\n        cursor: pointer;\n        border-radius: 0.4rem;\n        font-size: 1rem;\n        text-transform: uppercase;\n        transition: 0.4s ease-in-out;\n        &:hover {\n            background-color: #768294;\n        }\n    }\n`;\n_c2 = Container;\nvar _c, _c2;\n$RefreshReg$(_c, \"SetAvatar\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"names":["React","useState","useEffect","styled","useNavigate","loader","ToastContainer","toast","axios","setAvatarRoute","Buffer","jsxDEV","_jsxDEV","Fragment","_Fragment","SetAvatar","_s","api","navigate","avatars","setAvatars","isLoading","setIsLoading","selectedAvatar","setSelectedAvatar","undefined","toastOptions","position","autoClose","pauseOnHover","draggable","theme","localStorage","getItem","setProfilePicture","error","user","JSON","parse","data","post","_id","image","console","log","isSet","isAvatarImageSet","avatarImage","setItem","stringify","fetchData","i","get","Math","round","random","buffer","from","push","toString","children","Container","src","alt","className","fileName","_jsxFileName","lineNumber","columnNumber","map","avatar","index","onClick","_c","div","_c2","$RefreshReg$"],"sources":["/Users/srivanthdoddala/Desktop/NLPChatApp/public/src/pages/SetAvatar.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from \"styled-components\";\nimport { useNavigate } from 'react-router-dom';\nimport loader from \"../assets/loader.gif\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport axios from \"axios\";\nimport { setAvatarRoute } from \"../utils/APIRoutes\";\nimport {Buffer} from \"buffer\";\n\nexport default function SetAvatar() {\n\n    const api = `https://api.multiavatar.com/4645646`;\n    const navigate = useNavigate();\n    const [avatars, setAvatars] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [selectedAvatar, setSelectedAvatar] = useState(undefined);\n    const toastOptions =  {\n        position: \"bottom-right\",\n        autoClose: 8000,\n        pauseOnHover: true,\n        draggable: true,\n        theme: \"dark\",\n    };\n\n    useEffect(()=> {\n        if(!localStorage.getItem(\"chat-app-user\")) {\n            navigate(\"/login\")\n        }\n    },[])\n    const setProfilePicture = async () => {\n        if(selectedAvatar === undefined) {\n            toast.error(\"Please select an avatar or refresh the page for new options\", toastOptions);\n        } else {\n            const user = await JSON.parse(localStorage.getItem(\"chat-app-user\"));\n            const { data } = await axios.post(`${setAvatarRoute}/${user._id}`, {\n                image: avatars[selectedAvatar],\n            });\n            console.log(data);\n            if(data.isSet) {\n                user.isAvatarImageSet = true;\n                user.avatarImage = data.image;\n                localStorage.setItem(\"chat-app-user\",JSON.stringify(user));\n                navigate('/')\n            } else {\n                toast.error(\"Error setting avatar. Please try again\", toastOptions);\n            }\n        }\n    };\n    useEffect(() => {\n        const fetchData = async () => {\n            const data = [];\n            for(let i = 0; i < 4; i++) {\n                const image = await axios.get(\n                    `${api}/${Math.round(Math.random() * 1000)}`\n                );\n                const buffer = Buffer.from(image.data);\n                data.push(buffer.toString(\"base64\"));\n            }\n            setAvatars(data);\n            setIsLoading(false);\n        };\n\n        fetchData(); // Call the async function here\n    }, []);\n\n    return (\n        <>\n        {\n                isLoading? <Container>\n                    <img src={loader} alt =\"loader\" className='loader' />\n                </Container> : (\n                    <Container>\n                <div className=\"title-container\">\n                    <h1>Pick an avatar as your profile picture!</h1>\n                </div>\n                <div className='avatars'> {\n                    avatars.map((avatar,index)=> {\n                        return (\n                            <div \n                                key={index}\n                                className={`avatar ${\n                                    selectedAvatar === index ? \"selected\" : \"\"\n                                }`}\n                            >\n                                <img \n                                    src={`data:image/svg+xml;base64,${avatar}`}\n                                    alt=\"avatar\"\n                                    onClick={() => setSelectedAvatar(index)}\n                                />\n                            </div>\n                        );\n                    })\n                } </div>\n                <button className=\"submit-btn\" onClick={setProfilePicture}>Set as Avatar</button>\n            </Container>\n            )}\n            <ToastContainer />\n        </>\n    );\n}\n\nconst Container = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    gap: 3rem;\n    background-color: #4b77bd;\n    height: 100vh;\n    width: 100vw;\n    .loader {\n        max-inline-size: 100%;\n    }\n    .title-container {\n        h1 {\n            color: white;\n        }\n    }\n    .avatars {\n        display: flex;\n        gap: 2rem;\n        .avatar {\n            border: 0.4rem solid transparent;\n            padding: 0.4rem;\n            border-radius: 5rem;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            transition: 0.5s ease-in-out;\n            img {\n                height: 6rem;\n            }\n        }\n        .selected {\n            border: 0.4rem solid #cc123e;\n\n        }\n    }\n    .submit-btn {\n        background-color: #395a8f;\n        color: white;\n        padding: 1rem 2rem;\n        border: none;\n        font-weight: bold;\n        cursor: pointer;\n        border-radius: 0.4rem;\n        font-size: 1rem;\n        text-transform: uppercase;\n        transition: 0.4s ease-in-out;\n        &:hover {\n            background-color: #768294;\n        }\n    }\n`;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}