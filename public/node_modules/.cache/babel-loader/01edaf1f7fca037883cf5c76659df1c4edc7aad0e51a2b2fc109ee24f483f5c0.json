{"ast":null,"code":"var _jsxFileName = \"/Users/srivanthdoddala/Desktop/NLPChatApp/public/src/components/ChatContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport Logout from \"./Logout\";\nimport ChatInput from \"./ChatInput\";\nimport axios from \"axios\";\nimport { getAllMessagesRoute, sendMessageRoute } from \"../utils/APIRoutes\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ChatContainer({\n  currentChat,\n  currentUser,\n  socket\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const scrollRef = useRef();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (currentChat) {\n          const response = await axios.post(getAllMessagesRoute, {\n            from: currentUser._id,\n            to: currentChat._id\n          });\n          setMessages(response.data);\n        }\n      } catch (error) {\n        // Handle the error, e.g., display an error message or retry the request.\n        console.error(\"Error fetching messages:\", error);\n      }\n    };\n    fetchData();\n  }, [currentChat]);\n  const handleSendMsg = async msg => {\n    await axios.post(sendMessageRoute, {\n      from: currentUser._id,\n      to: currentChat._id,\n      message: msg\n    });\n    socket.current.emit(\"send-msg\", {\n      to: currentChat._id,\n      from: currentUser._id,\n      message: msg\n    });\n    const msgs = [...messages];\n    msgs.push({\n      fromSelf: true,\n      message: msg\n    });\n    setMessages(msgs);\n  };\n  /*\n  useEffect(() => {\n      if(socket.current) {\n          socket.current.on(\"msg-recieve\", (msg)=> {\n              setArrivalMessage({fromSelf:false, message:msg});\n          });\n      }\n  }, []);\n  */\n  useEffect(() => {\n    if (socket.current) {\n      socket.current.on(\"msg-recieve\", msg => {\n        // Update messages immediately when a message is received\n        setMessages(prev => [...prev, {\n          fromSelf: false,\n          message: msg\n        }]);\n      });\n    }\n  }, []);\n  useEffect(() => {\n    arrivalMessage && setMessages(prev => [...prev, arrivalMessage]);\n  }, [arrivalMessage]);\n  useEffect(() => {\n    var _scrollRef$current;\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavious: \"smooth\"\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: currentChat && /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/svg+xml;base64,${currentChat.avatarImage}`,\n              alt: \"avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"username\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: currentChat.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: messages.map(message => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: scrollRef,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message ${message.fromSelf ? \"sent\" : \"recieved\"}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [message.message, message.emotion && /*#__PURE__*/_jsxDEV(\"span\", {\n                    role: \"img\",\n                    \"aria-label\": \"emotion\",\n                    children: message.emotion\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 41\n            }, this)\n          }, uuidv4(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 37\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        handleSendMsg: handleSendMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n_s(ChatContainer, \"JfFSEdQKAcT6qp/80mIe4QU2dtg=\");\n_c = ChatContainer;\nconst Container = styled.div`\n    padding-top: 1rem;\n    display: grid;\n    grid-template-rows: 10% 78% 12%;\n    gap: 0.1rem;\n    overflow: hidden;\n    @media screenand (min-width: 720px) and (max:width: 1080px) {\n        grid-auto-rows: 15% 70% 15%;\n    }\n    .chat-header {\n        display:flex;\n        justify-content: space-between;\n        align-items: center;\n        padding: 0 2rem;\n        .user-details {\n            display: flex;\n            align-items: center;\n            gap: 1rem;\n            .avatar {\n                img {\n                    height: 3rem;\n                }\n            }\n            .username {\n                h3 {\n                    color: white;\n                }\n            }\n        }\n    }\n    .chat-messages {\n        padding: 1rem 2rem;\n        display: flex;\n        flex-direction: column;\n        gap: 1rem;\n        overflow: auto;\n        .message {\n            display: flex;\n            align-items: center;\n            .content {\n                max-width: 40%;\n                overflow-wrap; break-word;\n                padding: 1rem;\n                font-size: 1.1rem;\n                border-radius: 1rem;\n                color: #d1d1d1;\n            }\n        }\n        .sent {\n            justify-content: flex-end;\n            .content {\n                background-color: #9e7572;\n            }\n        }\n        .recieved {\n            justify-content: flex-start;\n            .content {\n                background-color: #5c5858;\n            }\n        }\n    }\n`;\n_c2 = Container;\nvar _c, _c2;\n$RefreshReg$(_c, \"ChatContainer\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","Logout","ChatInput","axios","getAllMessagesRoute","sendMessageRoute","v4","uuidv4","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatContainer","currentChat","currentUser","socket","_s","messages","setMessages","arrivalMessage","setArrivalMessage","scrollRef","fetchData","response","post","from","_id","to","data","error","console","handleSendMsg","msg","message","current","emit","msgs","push","fromSelf","on","prev","_scrollRef$current","scrollIntoView","behavious","children","Container","className","src","avatarImage","alt","fileName","_jsxFileName","lineNumber","columnNumber","username","map","ref","emotion","role","_c","div","_c2","$RefreshReg$"],"sources":["/Users/srivanthdoddala/Desktop/NLPChatApp/public/src/components/ChatContainer.jsx"],"sourcesContent":["import React,{useState, useEffect, useRef} from \"react\";\nimport styled from \"styled-components\";\nimport Logout from \"./Logout\";\nimport ChatInput from \"./ChatInput\";\nimport axios from \"axios\";\nimport { getAllMessagesRoute, sendMessageRoute } from \"../utils/APIRoutes\";\nimport {v4 as uuidv4} from \"uuid\";\n\nexport default function ChatContainer({currentChat, currentUser, socket}) {\n    const [messages, setMessages] = useState([]);\n    const [arrivalMessage, setArrivalMessage] = useState(null);\n    const scrollRef = useRef();\n    useEffect(() => {\n        const fetchData = async () => {\n          try {\n            if(currentChat) {\n                const response = await axios.post(getAllMessagesRoute, {\n                    from: currentUser._id,\n                    to: currentChat._id,\n                });\n                setMessages(response.data);\n            }\n          } catch (error) {\n            // Handle the error, e.g., display an error message or retry the request.\n            console.error(\"Error fetching messages:\", error);\n          }\n        };\n        fetchData();\n    }, [currentChat]);\n      \n    const handleSendMsg = async(msg) => {\n        await axios.post(sendMessageRoute, {\n            from: currentUser._id,\n            to: currentChat._id,\n            message: msg,\n        });\n        socket.current.emit(\"send-msg\", {\n            to: currentChat._id,\n            from: currentUser._id,\n            message: msg,\n        })\n        const msgs = [...messages];\n        msgs.push({fromSelf:true,message:msg});\n        setMessages(msgs);\n    };\n    /*\n    useEffect(() => {\n        if(socket.current) {\n            socket.current.on(\"msg-recieve\", (msg)=> {\n                setArrivalMessage({fromSelf:false, message:msg});\n            });\n        }\n    }, []);\n    */\n    useEffect(() => {\n        if (socket.current) {\n            socket.current.on(\"msg-recieve\", (msg) => {\n                // Update messages immediately when a message is received\n                setMessages((prev) => [...prev, { fromSelf: false, message: msg }]);\n            });\n        }\n    }, []);\n    useEffect(()=> {\n        arrivalMessage && setMessages((prev)=>[...prev,arrivalMessage]);\n    },[arrivalMessage])\n\n    useEffect(()=> {\n        scrollRef.current?.scrollIntoView({behavious: \"smooth\"});\n    }, [messages]);\n\n    return (\n        <>\n            {currentChat && (\n                <Container>\n                    <div className=\"chat-header\">\n                        <div className=\"user-details\">\n                            <div className=\"avatar\">\n                                <img \n                                    src={`data:image/svg+xml;base64,${currentChat.avatarImage}`}\n                                    alt=\"avatar\"\n                                />\n                            </div>\n                            <div className=\"username\">\n                                <h3>{currentChat.username}</h3>\n                            </div>\n                        </div>\n                        <Logout />\n                    </div>\n                    <div className=\"chat-messages\">\n                        {\n                            messages.map((message) => {\n                                return (\n                                    <div ref={scrollRef} key={uuidv4()}>\n                                        <div className= {`message ${message.fromSelf ? \"sent\":\"recieved\"}`}>\n                                            <div className=\"content\">\n                                                <p>\n                                                    {message.message}\n                                                    {message.emotion && (\n                                                        <span role=\"img\" aria-label=\"emotion\">\n                                                            {message.emotion}\n                                                        </span>\n                                                    )}\n                                                </p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                )\n                            }\n                        )}\n                    </div>\n                    <ChatInput handleSendMsg={handleSendMsg}/>\n                </Container>\n            )}\n        </>\n    );\n}\n\nconst Container = styled.div\n`\n    padding-top: 1rem;\n    display: grid;\n    grid-template-rows: 10% 78% 12%;\n    gap: 0.1rem;\n    overflow: hidden;\n    @media screenand (min-width: 720px) and (max:width: 1080px) {\n        grid-auto-rows: 15% 70% 15%;\n    }\n    .chat-header {\n        display:flex;\n        justify-content: space-between;\n        align-items: center;\n        padding: 0 2rem;\n        .user-details {\n            display: flex;\n            align-items: center;\n            gap: 1rem;\n            .avatar {\n                img {\n                    height: 3rem;\n                }\n            }\n            .username {\n                h3 {\n                    color: white;\n                }\n            }\n        }\n    }\n    .chat-messages {\n        padding: 1rem 2rem;\n        display: flex;\n        flex-direction: column;\n        gap: 1rem;\n        overflow: auto;\n        .message {\n            display: flex;\n            align-items: center;\n            .content {\n                max-width: 40%;\n                overflow-wrap; break-word;\n                padding: 1rem;\n                font-size: 1.1rem;\n                border-radius: 1rem;\n                color: #d1d1d1;\n            }\n        }\n        .sent {\n            justify-content: flex-end;\n            .content {\n                background-color: #9e7572;\n            }\n        }\n        .recieved {\n            justify-content: flex-start;\n            .content {\n                background-color: #5c5858;\n            }\n        }\n    }\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}